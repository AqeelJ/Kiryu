import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import java.awt.Color;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.JTextComponent;

import java.awt.Font;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Vector;
import java.awt.event.ActionEvent;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBox;
import javax.swing.SwingConstants;
import javax.swing.border.EtchedBorder;
import java.awt.TextArea;
import javax.swing.JTextArea;
import java.util.*
;public class HyperMarket {

	protected static final JTextComponent jtxtreceipt = null;
	private JFrame frmHypermarket;
	private JTextField jtxt_custName;
	private JTextField jtxt_susu;
	private JTextField jtxt_beras;
	private JTable table;
	DefaultTableModel model;
	protected Vector<?> row;
	private JTextField jtxt_maggi;
	private JTextField jtxt_roti;
	private JTextField jtxt_tepung;
	private JTextField jtxt_ayam;
	protected TextArea jtxtreceipt1;
	private JTextField jtxt_total;
	private JTextField jtxt_custId;
	
	String iTotal;
	double [] itemcost = new double [20];

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					HyperMarket window = new HyperMarket();
					window.frmHypermarket.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public HyperMarket() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frmHypermarket = new JFrame();
		frmHypermarket.setTitle("\r\n");
		frmHypermarket.setBounds(100, 100, 1026, 667);
		frmHypermarket.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frmHypermarket.getContentPane().setLayout(null);
		
		JPanel panel = new JPanel();
		panel.setBackground(new Color(173, 216, 230));
		panel.setBounds(0, 0, 1010, 628);
		frmHypermarket.getContentPane().add(panel);
		panel.setLayout(null);
		
		JLabel lblNewLabel_1 = new JLabel("HyperMarket");
		lblNewLabel_1.setFont(new Font("Tahoma", Font.PLAIN, 22));
		lblNewLabel_1.setBounds(0, 0, 259, 28);
		panel.add(lblNewLabel_1);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBorder(new EtchedBorder(EtchedBorder.LOWERED, null, null));
		panel_1.setBounds(0, 57, 1010, 95);
		panel.add(panel_1);
		panel_1.setLayout(null);
		
		jtxt_custName = new JTextField();
		jtxt_custName.setBounds(129, 41, 125, 20);
		panel_1.add(jtxt_custName);
		jtxt_custName.setColumns(10);
		
		JLabel lblNewLabel = new JLabel("Customer ID");
		lblNewLabel.setBounds(10, 8, 85, 28);
		panel_1.add(lblNewLabel);
		
		JLabel lblCustomerName = new JLabel("Customer Name");
		lblCustomerName.setBounds(10, 37, 96, 28);
		panel_1.add(lblCustomerName);
		
		jtxt_custId = new JTextField();
		jtxt_custId.setColumns(10);
		jtxt_custId.setBounds(129, 12, 125, 20);
		panel_1.add(jtxt_custId);
		
		JPanel panel_2 = new JPanel();
		panel_2.setBorder(new EtchedBorder(EtchedBorder.LOWERED, null, null));
		panel_2.setBounds(0, 151, 1010, 122);
		panel.add(panel_2);
		panel_2.setLayout(null);
		
		JLabel lblNewLabel_2 = new JLabel("Items");
		lblNewLabel_2.setBounds(10, 0, 104, 22);
		panel_2.add(lblNewLabel_2);
		
		jtxt_susu = new JTextField();
		jtxt_susu.setFont(new Font("Tahoma", Font.PLAIN, 13));
		jtxt_susu.setHorizontalAlignment(SwingConstants.CENTER);
		jtxt_susu.setText("0");
		jtxt_susu.setBounds(103, 33, 137, 21);
		panel_2.add(jtxt_susu);
		jtxt_susu.setColumns(10);
		
		jtxt_beras = new JTextField();
		jtxt_beras.setFont(new Font("Tahoma", Font.PLAIN, 13));
		jtxt_beras.setHorizontalAlignment(SwingConstants.CENTER);
		jtxt_beras.setText("0");
		jtxt_beras.setColumns(10);
		jtxt_beras.setBounds(103, 66, 137, 21);
		panel_2.add(jtxt_beras);
		
		JCheckBox chk_susu = new JCheckBox("Susu");
		chk_susu.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				if (chk_susu.isSelected()) 
				{
					jtxt_susu.setEnabled(true);
					jtxt_susu.setText("");
					jtxt_susu.requestFocus();
				}
				else 
				{
					jtxt_susu.setEnabled(false);
					jtxt_susu.setText("0");
				}
				
				
			}
		});
		chk_susu.setBounds(0, 29, 97, 23);
		panel_2.add(chk_susu);
		
		JCheckBox chk_beras = new JCheckBox("Beras");
		chk_beras.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				if (chk_beras.isSelected()) 
				{
					jtxt_beras.setEnabled(true);
					jtxt_beras.setText("");
					jtxt_beras.requestFocus();
				}
				else 
				{
					jtxt_beras.setEnabled(false);
					jtxt_beras.setText("0");
				}
			}
		});
		chk_beras.setBounds(0, 65, 97, 23);
		panel_2.add(chk_beras);
		
		JCheckBox chk_maggi = new JCheckBox("Maggi");
		chk_maggi.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				if (chk_maggi.isSelected()) 
				{
					jtxt_maggi.setEnabled(true);
					jtxt_maggi.setText("");
					jtxt_maggi.requestFocus();
				}
				else 
				{
					jtxt_maggi.setEnabled(false);
					jtxt_maggi.setText("0");
				}
			}
		});
		chk_maggi.setBounds(246, 32, 97, 23);
		panel_2.add(chk_maggi);
		
		JCheckBox chk_roti = new JCheckBox("Roti");
		chk_roti.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				if (chk_roti.isSelected()) 
				{
					jtxt_roti.setEnabled(true);
					jtxt_roti.setText("");
					jtxt_roti.requestFocus();
				}
				else 
				{
					jtxt_roti.setEnabled(false);
					jtxt_roti.setText("0");
				}
			}
		});
		chk_roti.setBounds(246, 65, 97, 23);
		panel_2.add(chk_roti);
		
		jtxt_maggi = new JTextField();
		jtxt_maggi.setFont(new Font("Tahoma", Font.PLAIN, 13));
		jtxt_maggi.setHorizontalAlignment(SwingConstants.CENTER);
		jtxt_maggi.setText("0");
		jtxt_maggi.setColumns(10);
		jtxt_maggi.setBounds(345, 33, 137, 21);
		panel_2.add(jtxt_maggi);
		
		jtxt_roti = new JTextField();
		jtxt_roti.setFont(new Font("Tahoma", Font.PLAIN, 13));
		jtxt_roti.setHorizontalAlignment(SwingConstants.CENTER);
		jtxt_roti.setText("0");
		jtxt_roti.setColumns(10);
		jtxt_roti.setBounds(345, 66, 137, 21);
		panel_2.add(jtxt_roti);
		
		JCheckBox chk_tepung = new JCheckBox("Tepung");
		chk_tepung.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				if (chk_tepung.isSelected()) 
				{
					jtxt_tepung.setEnabled(true);
					jtxt_tepung.setText("");
					jtxt_tepung.requestFocus();
				}
				else 
				{
					jtxt_tepung.setEnabled(false);
					jtxt_tepung.setText("0");
				}
			}
		});
		chk_tepung.setBounds(516, 33, 97, 23);
		panel_2.add(chk_tepung);
		
		JCheckBox chk_ayam = new JCheckBox("Ayam");
		chk_ayam.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				if (chk_ayam.isSelected()) 
				{
					jtxt_ayam.setEnabled(true);
					jtxt_ayam.setText("");
					jtxt_ayam.requestFocus();
				}
				else 
				{
					jtxt_ayam.setEnabled(false);
					jtxt_ayam.setText("0");
				}
			}
		});
		chk_ayam.setBounds(516, 66, 97, 23);
		panel_2.add(chk_ayam);
		
		jtxt_tepung = new JTextField();
		jtxt_tepung.setFont(new Font("Tahoma", Font.PLAIN, 13));
		jtxt_tepung.setHorizontalAlignment(SwingConstants.CENTER);
		jtxt_tepung.setText("0");
		jtxt_tepung.setColumns(10);
		jtxt_tepung.setBounds(615, 34, 137, 21);
		panel_2.add(jtxt_tepung);
		
		jtxt_ayam = new JTextField();
		jtxt_ayam.setFont(new Font("Tahoma", Font.PLAIN, 13));
		jtxt_ayam.setHorizontalAlignment(SwingConstants.CENTER);
		jtxt_ayam.setText("0");
		jtxt_ayam.setColumns(10);
		jtxt_ayam.setBounds(615, 67, 137, 21);
		panel_2.add(jtxt_ayam);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBorder(new EtchedBorder(EtchedBorder.LOWERED, null, null));
		panel_3.setBounds(0, 272, 1010, 356);
		panel.add(panel_3);
		panel_3.setLayout(null);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 11, 300, 334);
		panel_3.add(scrollPane);
		
		table = new JTable();
		table.setBackground(new Color(240, 248, 255));
		model=new DefaultTableModel();
		Object[] column = {"Item List", "Price", "Quantity"};
		Object[] row = new Object[0];
		model.setColumnIdentifiers(column);
		table.setModel(model);
		scrollPane.setViewportView(table);
		
		JButton btnAdd = new JButton("Add\r\n");
		btnAdd.setBounds(351, 54, 137, 28);
		panel_3.add(btnAdd);
		
		JButton btnRemove = new JButton("Remove\r\n");
		btnRemove.setBounds(351, 138, 137, 28);
		btnRemove.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		panel_3.add(btnRemove);
		
		JButton btnTotal = new JButton("Total");
		btnTotal.setBounds(351, 215, 137, 28);
		btnTotal.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				itemcost[0] = Double.parseDouble(jtxt_susu.getText()) * 1.50;
				itemcost[1] = Double.parseDouble(jtxt_beras.getText()) * 2.50;
				itemcost[2] = Double.parseDouble(jtxt_maggi.getText()) * 3.50;
				itemcost[3] = Double.parseDouble(jtxt_roti.getText()) * 2.75;
				itemcost[4] = Double.parseDouble(jtxt_tepung.getText()) * 4.50;
				itemcost[5] = Double.parseDouble(jtxt_ayam.getText()) * 7.50;
				
				itemcost[6] = itemcost[0] + itemcost[1] + itemcost[2];
				itemcost[7] = itemcost[3] + itemcost[4] + itemcost[5]; 
				
				itemcost[8] = itemcost[6] + itemcost[7];
				
				iTotal = String.format("RM %.2f", itemcost[8] + (itemcost[8]/100));
				
				jtxt_total.setText(iTotal);
				
				//====================================================================
					jtxtreceipt.setEnabled(true);
				//====================================================================
					int refs = 1325 + (int) (Math.random()*4238);
					
				//==========================================================
					Calendar timer = Calendar.getInstance();
					timer.getTime();
					SimpleDateFormat tTime = new SimpleDateFormat("HH:mm:ss");
					tTime.format(timer.getTime());
					SimpleDateFormat Tdate = new SimpleDateFormat("dd-MM-yyyy");
					Tdate.format(timer.getTime());
				//===========================================================
					((JTextArea) jtxtreceipt).append("\tCustomer Billing System\n"+
					"Reference:\t\t\t"+ refs +
					"\n===========================================\t" +
					"\nCustomer ID:\t\t\t" + jtxt_custId.getText()+
					"\nCustomer Name:\t\t\t "+ jtxt_custName.getText()+
					"\nSusu:\t\t\t"+ jtxt_susu.getText()+
					"\nBeras:\t\t\t"+ jtxt_beras.getText()+
					"\nMaggi:\t\t\t"+ jtxt_maggi.getText()+
					"\nRoti:\t\t\t"+ jtxt_roti.getText()+
					"\nTepung:\t\t\t"+ jtxt_tepung.getText()+
					"\nAyam:\t\t\t"+ jtxt_ayam.getText()+
					
					"\n=======================================\t"+
					
					"\nTotal:\t\t\t" + iTotal +
					"\n======================================\t"+
					"\nDate: " +Tdate.format(timer.getTime())+
								"\t\tTime:" + tTime.format(timer.getTime())+
					"\n\n\tThank you for Shopping at Hypermarket\n");
					
				
				
			}
		});
		panel_3.add(btnTotal);
		
		JButton btnPrint = new JButton("Print");
		btnPrint.setBounds(351, 289, 137, 28);
		btnPrint.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				
				try 
				{
					jtxtreceipt.print();
				}
				catch (java.awt.print.PrinterException e ) 
				{
					System.err.format("No Printer found" , e.getMessage());
				}
			}
		});
		panel_3.add(btnPrint);
		
		jtxt_total = new JTextField();
		jtxt_total.setBounds(498, 215, 155, 31);
		panel_3.add(jtxt_total);
		jtxt_total.setColumns(10);
		
		JTextArea jtxtreceipt = new JTextArea();
		jtxtreceipt.setBounds(679, 0, 331, 345);
		panel_3.add(jtxtreceipt);
		
		btnAdd.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				model.addRow(row);
			}
		});
	}
}
