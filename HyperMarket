import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.util.*;
import java.util.logging.Logger;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.Color;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;

import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.AbstractButton;
import javax.swing.ImageIcon;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JScrollBar;
import javax.swing.border.BevelBorder;
import javax.swing.JScrollPane;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.System.Logger.Level;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;

import javax.swing.SwingConstants;
import javax.swing.JTextArea;
import javax.swing.ListSelectionModel;

public class MainUI2 extends JFrame {
	
	private JPanel contentPane;
	private JTextField textFieldCounterNo;
	private JTextField textFieldCustId;
	private JTextArea textArea;
	private JTable table_2;

	static  ArrayList < ItemInformation > purchasedItemList;
	static  LinkedList < CustomerInformation > customerList;
	
	 static   Queue < ItemInformation > qCounter1 = new LinkedList< ItemInformation > ();
	 static   Queue < ItemInformation > qCounter2 = new LinkedList< ItemInformation > ();
	 static   Queue < ItemInformation > qCounter3 = new LinkedList< ItemInformation > ();
	    
	    static Queue < Integer > PrimaryCounter = new LinkedList();
	    static Queue < Integer > LastCounter = new LinkedList();
	    
	    DefaultTableModel dtm;
	    int row,col;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					MainUI2 frame = new MainUI2();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
	
	public static void QueueData() throws IOException
	{
		//Read group project.txt to store into the purchasedArrList and customerList
		Formatter formatter;
	    DecimalFormat priceformatter = new DecimalFormat("#0.00");
	BufferedReader br = new BufferedReader(new FileReader("group project.txt"));
	formatter = new Formatter();
	
	// ExceptionHandler
	 try {
	      Thread.sleep(5000);
	    } catch (InterruptedException ie) {
	      ie.printStackTrace();
	    }

	
	String line = br.readLine();
	
		// Initiliase data to add in queue
	 for (int i = 0; i < 100; i++) {

		 //
	  StringTokenizer st = new StringTokenizer(line, ";");
      String custID = st.nextToken();
      String custIC = st.nextToken();
      int CounterPaid =Integer.parseInt(st.nextToken());
      String itemID = st.nextToken();
      String itemName = st.nextToken();
      double itemPrice = Double.parseDouble(st.nextToken());
      String datePurchase = st.nextToken();		     
      int itemQuantity = Integer.parseInt(st.nextToken());

      

		CustomerInformation obj = new CustomerInformation (custID, custIC, CounterPaid) ;
	      
	      customerList.add(obj);
	      
	      ItemInformation obj1 = new ItemInformation (itemID, itemName, itemPrice, datePurchase, itemQuantity); 
	      
	      purchasedItemList.add(obj1);
	      
      // Queue to customer go to each counter
	      if (itemQuantity <=5) 
	      {
	    	  CounterPaid = PrimaryCounter.poll();
	    	  
	      }		else 
	      {
	    	  CounterPaid = LastCounter.poll();	      
	      }
	      
	      if (obj.getCounterPaid() == 1 )
			{
				qCounter1.add(obj1);
			}
		    
		    else if (obj.getCounterPaid() == 2 ) 
		    {
		    	qCounter2.add(obj1);
		    }  
		    
		    else 
		    {
		    	qCounter3.add(obj1);
		    }
		    
		    //Add the counter number again int the Queue
		    if (itemQuantity <= 5) 
		    {
		    	PrimaryCounter.add(CounterPaid);
		    }
		    
		    else 
		    {
		    	LastCounter.add(CounterPaid);
		    }

		    int qSize1 = qCounter1.size();
		    int qSize2 = qCounter2.size();
		    int qSize3 = qCounter3.size();
		    }
	 }
		    
	 

	/**
	 * Create the frame.
	 */
	public MainUI2() {
		
		 //JFrame Title
		setTitle("HyperMarket");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 1297, 597);
		contentPane = new JPanel();
		contentPane.setBackground(new Color(0, 139, 139));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBounds(851, 40, 430, 509);
		contentPane.add(panel_1);
		panel_1.setLayout(null);
		
		JTextArea textArea = new JTextArea();
		textArea.setBounds(10, 11, 410, 487);
		panel_1.add(textArea);
		
		JLabel lblItemList = new JLabel("Customer List");
		lblItemList.setBackground(new Color(245, 255, 250));
		lblItemList.setForeground(new Color(240, 255, 255));
		lblItemList.setFont(new Font("Lucida Bright", Font.BOLD, 22));
		lblItemList.setBounds(337, 11, 172, 27);
		contentPane.add(lblItemList);
		
		textFieldCounterNo = new JTextField();
		textFieldCounterNo.setHorizontalAlignment(SwingConstants.CENTER);
		textFieldCounterNo.setFont(new Font("Lucida Console", Font.BOLD, 20));
		textFieldCounterNo.setColumns(10);
		textFieldCounterNo.setBounds(197, 481, 122, 27);
		contentPane.add(textFieldCounterNo);
		
		//Create table
		dtm = new DefaultTableModel();
		Object[] column = {"Customer ID","Customer IC","Counter","Item ID", "Item Name" , "Item Price" , "Purchase Date" , "Item Quantity"};
		dtm.setColumnIdentifiers(column);
		
		//Button to add purchasedItemsList to JTable
		JButton btnAddToQueue_1 = new JButton("Add Data Customer");
		btnAddToQueue_1.setBackground(new Color(240, 248, 255));
		btnAddToQueue_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
	
			try {
				String filePath = "C:\\Users\\Asus\\Downloads\\group project.txt";
				File file = new File(filePath);
				BufferedReader br = new BufferedReader(new FileReader(file));
				
			    Object[] purchasedItemsList = br.lines().toArray();
			    for(int i = 0; i<purchasedItemsList.length;i++)
			    {
			    	String line = purchasedItemsList[i].toString().trim();
			    	String[] dataRow = line.split(";");
			    	dtm.addRow(dataRow);
			    }
				
			} catch(Exception e1)
			{
				System.out.println("File Not Found!");
			}
				
			} 
		});

		btnAddToQueue_1.setFont(new Font("Tahoma", Font.BOLD, 15));
		btnAddToQueue_1.setBounds(26, 399, 205, 27);
		contentPane.add(btnAddToQueue_1);
		
		//Receipt button when customer paid
		JButton btnReceipt = new JButton("Receipt");
		btnReceipt.setBackground(new Color(240, 248, 255));
		btnReceipt.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				    
			        int i = table_2.getSelectedRow();
				    String custId = dtm.getValueAt(i,0).toString();
				    String custIc = dtm.getValueAt(i,1).toString();
				    String counterPaid = textFieldCounterNo.getText();
				    String itemId = dtm.getValueAt(i,3).toString();
				    String itemName = dtm.getValueAt(i,4).toString();
				    String itemPrice = dtm.getValueAt(i,5).toString();
				    String datePurchase = dtm.getValueAt(i,6).toString();
				    String itemQuantity = dtm.getValueAt(i,7).toString();
				      	
               //Set data to textArea 
				if(table_2.
                getSelectedRowCount()==1)
					
			    {textArea.setText(textArea.getText()+ "\t\tHypermarket" + 
						"\nCustomer ID: " + custId + "\nCustomer IC: " + custIc +
						"\nCounter Paid: " + counterPaid + "\nDate: " + datePurchase +
						"\n\n---------------------------------------------------------------------------------------------------------" +
						"\nItem ID: " + itemId + 
						"\n\nItem Name: " + itemName + 
						"\n\nTotal Items: " + itemQuantity);
				textArea.setText(textArea.getText()+"\n----------------------------------------------------------------------------------------------------------" + 
						"\nTotal: RM" + itemPrice +
						"\n------------------------------------------------------------------------------------------------------------" +
						"\n\n\t          Thank you for shopping at HyperMarket!" + 
						"\n---------------------------------------------------------------------------------------------------------\n");
					
					
			}
			else
				JOptionPane.showMessageDialog(null, "Error!");
			}	
		});
		btnReceipt.setFont(new Font("Tahoma", Font.BOLD, 15));
		btnReceipt.setBounds(722, 459, 119, 27);
		contentPane.add(btnReceipt);
		
		textFieldCustId = new JTextField();
		textFieldCustId.setHorizontalAlignment(SwingConstants.CENTER);
		textFieldCustId.setFont(new Font("Lucida Console", Font.BOLD, 20));
		textFieldCustId.setColumns(10);
		textFieldCustId.setBounds(197, 443, 122, 27);
		contentPane.add(textFieldCustId);
		
		JLabel lblCustomerId = new JLabel("Customer ID :");
		lblCustomerId.setBackground(new Color(245, 255, 250));
		lblCustomerId.setForeground(new Color(240, 255, 255));
		lblCustomerId.setFont(new Font("Tahoma", Font.BOLD, 22));
		lblCustomerId.setBounds(26, 440, 161, 27);
		contentPane.add(lblCustomerId);
		
		//Pay button asks for confirmation from customer to proceed
		JButton btnAddToQueue_1_1 = new JButton("Pay");
		btnAddToQueue_1_1.setBackground(new Color(240, 248, 255));
		btnAddToQueue_1_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				 JOptionPane.showConfirmDialog(null, "Proceed");
				 int i = table_2.getSelectedRow();
			
				    int itemQuantity = Integer.parseInt(dtm.getValueAt(i,7).toString());
				    
				    if(table_2.getSelectedRowCount()==1)
					{
				    	 if(itemQuantity >5)
						    {   
						    	
						    	textFieldCounterNo.setText("3");
						    }
						    else if(itemQuantity <=5)
						    {	
						    	textFieldCounterNo.setText("2");
						    }
						    else if(itemQuantity <=3)
						    {
						    	textFieldCounterNo.setText("1");
						    }
						
						JOptionPane.showMessageDialog(null, "Complete!");
					}
					else if(table_2.getSelectedRowCount()==0)
					{
						JOptionPane.showMessageDialog(null, "Invalid!");
					}
				    
		}});
		btnAddToQueue_1_1.setFont(new Font("Tahoma", Font.BOLD, 15));
		btnAddToQueue_1_1.setBounds(722, 399, 119, 27);
		contentPane.add(btnAddToQueue_1_1);
		
		JLabel lblCounter = new JLabel("Counter :");
		lblCounter.setForeground(new Color(240, 255, 255));
		lblCounter.setFont(new Font("Tahoma", Font.BOLD, 22));
		lblCounter.setBounds(26, 478, 111, 27);
		contentPane.add(lblCounter);
		
		JButton btnAddToQueue_1_1_1 = new JButton("Checkout");
		btnAddToQueue_1_1_1.setBackground(new Color(240, 248, 255));
		btnAddToQueue_1_1_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				//delete queue
				if(table_2.getSelectedRowCount()==1)
				{
					dtm.removeRow(table_2.getSelectedRow());
					textFieldCounterNo.setText("");
					textFieldCustId.setText("");
					textArea.setText("");
					
					JOptionPane.showMessageDialog(null, "Thank you!");
				}
				else
					JOptionPane.showMessageDialog(null, "Pay first to checkout!");
				
				
				
			}
		});
		btnAddToQueue_1_1_1.setFont(new Font("Tahoma", Font.BOLD, 15));
		btnAddToQueue_1_1_1.setBounds(722, 522, 119, 27);
		contentPane.add(btnAddToQueue_1_1_1);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(25, 40, 815, 345);
		contentPane.add(scrollPane);
		
		//JTable add Mouse Listener for user to click selected row
		table_2 = new JTable();
		table_2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		table_2.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
			    int i = table_2.getSelectedRow();
			    String custId = dtm.getValueAt(i,0).toString();
			    String custIc = dtm.getValueAt(i,1).toString();
			    String counterPaid = dtm.getValueAt(i,2).toString();
			    String itemId = dtm.getValueAt(i,3).toString();
			    String itemName = dtm.getValueAt(i,4).toString();
			    String itemPrice = dtm.getValueAt(i,5).toString();
			    String datePurchase = dtm.getValueAt(i,6).toString();
			    String itemQuantity = dtm.getValueAt(i,7).toString();
			    
			    textFieldCustId.setText(custId);
			}
		});
		table_2.setModel(dtm);
		
		scrollPane.setViewportView(table_2);
		table_2.getColumnModel().getColumn(1).setPreferredWidth(185);
		table_2.getColumnModel().getColumn(3).setPreferredWidth(102);
		table_2.getColumnModel().getColumn(4).setPreferredWidth(103);
		table_2.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		table_2.setColumnSelectionAllowed(true);
		table_2.setCellSelectionEnabled(true);
		
				
				
				JPanel panel = new JPanel();
				scrollPane.setColumnHeaderView(panel);
				panel.setBorder(new BevelBorder(BevelBorder.LOWERED, Color.GRAY, null, null, null));
				panel.setLayout(null);
				
				JLabel lblItemList_1 = new JLabel("Receipt");
				lblItemList_1.setHorizontalAlignment(SwingConstants.CENTER);
				lblItemList_1.setForeground(new Color(240, 255, 255));
				lblItemList_1.setFont(new Font("Lucida Bright", Font.BOLD, 22));
				lblItemList_1.setBackground(new Color(245, 255, 250));
				lblItemList_1.setBounds(969, 11, 172, 27);
				contentPane.add(lblItemList_1);
		
		
		
		
		
	}
	}


